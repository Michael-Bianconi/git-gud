#ifndef GIT_GUD_HPP
#define GIT_GUD_HPP

#include <vector>

namespace git_gud
{

	class Commit
	{

		private:

			int commitID;
			int branchID;

			std::vector<Commit> parents;
			std::vector<Commit> children;

			int generateID();

		public:
			Commit(int branchID); // autogenerated ID
			Commit(int branchID, int commitID); // pregenerated ID

			int getID();
			int getBranch();
			std::vector<Commit> getParents();
			std::vector<Commit> getChildren();

			void addParent(Commit parent);
			void addChild(Commit child);

			bool removeParent(int id);
			bool removeChild(int id);
	};

	class GitTree
	{
		private:

			std::vector<Commit> commits;
			int numBranches = 0;

			int generateBranchID();

		public:

			GitTree();

			Commit getLatest();
			Commit getLatest(int branchID);
			std::vector<Commit> getAllCommits();
			int getNumBranches();

			void addCommit(int parentID);
			void addCommitNewBranch(int parentID);
	};
}

#endif